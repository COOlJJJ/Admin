{"remainingRequest":"D:\\UserData\\Z0047YMR\\Documents\\GitHub\\Admin-master\\node_modules\\babel-loader\\lib\\index.js!D:\\UserData\\Z0047YMR\\Documents\\GitHub\\Admin-master\\src\\permission.js","dependencies":[{"path":"D:\\UserData\\Z0047YMR\\Documents\\GitHub\\Admin-master\\src\\permission.js","mtime":1649167265483},{"path":"D:\\UserData\\Z0047YMR\\Documents\\GitHub\\Admin-master\\babel.config.js","mtime":1648119135000},{"path":"D:\\UserData\\Z0047YMR\\Documents\\GitHub\\Admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\UserData\\Z0047YMR\\Documents\\GitHub\\Admin-master\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiRDovVXNlckRhdGEvWjAwNDdZTVIvRG9jdW1lbnRzL0dpdEh1Yi9BZG1pbi1tYXN0ZXIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIuanMiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiRDovVXNlckRhdGEvWjAwNDdZTVIvRG9jdW1lbnRzL0dpdEh1Yi9BZG1pbi1tYXN0ZXIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IuanMiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCByb3V0ZXIgZnJvbSAnLi9yb3V0ZXInOwppbXBvcnQgc3RvcmUgZnJvbSAnLi9zdG9yZSc7CmltcG9ydCB7IE1lc3NhZ2UgfSBmcm9tICdlbGVtZW50LXVpJzsKaW1wb3J0IE5Qcm9ncmVzcyBmcm9tICducHJvZ3Jlc3MnOyAvLyBwcm9ncmVzcyBiYXIKCmltcG9ydCAnbnByb2dyZXNzL25wcm9ncmVzcy5jc3MnOyAvLyBwcm9ncmVzcyBiYXIgc3R5bGUKCmltcG9ydCB7IGdldFRva2VuIH0gZnJvbSAnQC91dGlscy9hdXRoJzsgLy8gZ2V0IHRva2VuIGZyb20gY29va2llCgppbXBvcnQgZ2V0UGFnZVRpdGxlIGZyb20gJ0AvdXRpbHMvZ2V0LXBhZ2UtdGl0bGUnOwpOUHJvZ3Jlc3MuY29uZmlndXJlKHsKICBzaG93U3Bpbm5lcjogZmFsc2UKfSk7IC8vIE5Qcm9ncmVzcyBDb25maWd1cmF0aW9uCgp2YXIgd2hpdGVMaXN0ID0gWycvbG9naW4nXTsgLy8gbm8gcmVkaXJlY3Qgd2hpdGVsaXN0Cgpyb3V0ZXIuYmVmb3JlRWFjaCggLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICB2YXIgX3JlZiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSh0bywgZnJvbSwgbmV4dCkgewogICAgdmFyIGhhc1Rva2VuLCBoYXNSb2xlcywgX3lpZWxkJHN0b3JlJGRpc3BhdGNoLCByb2xlcywgYWNjZXNzUm91dGVzOwoKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgLy8gc3RhcnQgcHJvZ3Jlc3MgYmFyCiAgICAgICAgICAgIE5Qcm9ncmVzcy5zdGFydCgpOyAvLyBzZXQgcGFnZSB0aXRsZQoKICAgICAgICAgICAgZG9jdW1lbnQudGl0bGUgPSBnZXRQYWdlVGl0bGUodG8ubWV0YS50aXRsZSk7IC8vIGRldGVybWluZSB3aGV0aGVyIHRoZSB1c2VyIGhhcyBsb2dnZWQgaW4KCiAgICAgICAgICAgIGhhc1Rva2VuID0gZ2V0VG9rZW4oKTsKCiAgICAgICAgICAgIGlmICghaGFzVG9rZW4pIHsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzY7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmICghKHRvLnBhdGggPT09ICcvbG9naW4nKSkgewogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA5OwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CgogICAgICAgICAgICAvLyBpZiBpcyBsb2dnZWQgaW4sIHJlZGlyZWN0IHRvIHRoZSBob21lIHBhZ2UKICAgICAgICAgICAgbmV4dCh7CiAgICAgICAgICAgICAgcGF0aDogJy8nCiAgICAgICAgICAgIH0pOwogICAgICAgICAgICBOUHJvZ3Jlc3MuZG9uZSgpOwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzQ7CiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgLy8gZGV0ZXJtaW5lIHdoZXRoZXIgdGhlIHVzZXIgaGFzIG9idGFpbmVkIGhpcyBwZXJtaXNzaW9uIHJvbGVzIHRocm91Z2ggZ2V0SW5mbwogICAgICAgICAgICBoYXNSb2xlcyA9IHN0b3JlLmdldHRlcnMucm9sZXMgJiYgc3RvcmUuZ2V0dGVycy5yb2xlcy5sZW5ndGggPiAwOwoKICAgICAgICAgICAgaWYgKCFoYXNSb2xlcykgewogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxNDsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgbmV4dCgpOwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzQ7CiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgIGNhc2UgMTQ6CiAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxNDsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE3OwogICAgICAgICAgICByZXR1cm4gc3RvcmUuZGlzcGF0Y2goJ3VzZXIvZ2V0SW5mbycpOwoKICAgICAgICAgIGNhc2UgMTc6CiAgICAgICAgICAgIF95aWVsZCRzdG9yZSRkaXNwYXRjaCA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgIHJvbGVzID0gX3lpZWxkJHN0b3JlJGRpc3BhdGNoLnJvbGVzOwogICAgICAgICAgICBjb25zb2xlLmxvZyhyb2xlcyk7IC8vIGdlbmVyYXRlIGFjY2Vzc2libGUgcm91dGVzIG1hcCBiYXNlZCBvbiByb2xlcwoKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDIyOwogICAgICAgICAgICByZXR1cm4gc3RvcmUuZGlzcGF0Y2goJ3Blcm1pc3Npb24vZ2VuZXJhdGVSb3V0ZXMnLCByb2xlcyk7CgogICAgICAgICAgY2FzZSAyMjoKICAgICAgICAgICAgYWNjZXNzUm91dGVzID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgLy8gZHluYW1pY2FsbHkgYWRkIGFjY2Vzc2libGUgcm91dGVzCiAgICAgICAgICAgIHJvdXRlci5hZGRSb3V0ZXMoYWNjZXNzUm91dGVzKTsgLy8gaGFjayBtZXRob2QgdG8gZW5zdXJlIHRoYXQgYWRkUm91dGVzIGlzIGNvbXBsZXRlCiAgICAgICAgICAgIC8vIHNldCB0aGUgcmVwbGFjZTogdHJ1ZSwgc28gdGhlIG5hdmlnYXRpb24gd2lsbCBub3QgbGVhdmUgYSBoaXN0b3J5IHJlY29yZAoKICAgICAgICAgICAgbmV4dChfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIHRvKSwge30sIHsKICAgICAgICAgICAgICByZXBsYWNlOiB0cnVlCiAgICAgICAgICAgIH0pKTsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM0OwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICBjYXNlIDI3OgogICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMjc7CiAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMTQpOwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzE7CiAgICAgICAgICAgIHJldHVybiBzdG9yZS5kaXNwYXRjaCgndXNlci9yZXNldFRva2VuJyk7CgogICAgICAgICAgY2FzZSAzMToKICAgICAgICAgICAgTWVzc2FnZS5lcnJvcihfY29udGV4dC50MCB8fCAnSGFzIEVycm9yJyk7CiAgICAgICAgICAgIG5leHQoIi9sb2dpbj9yZWRpcmVjdD0iLmNvbmNhdCh0by5wYXRoKSk7CiAgICAgICAgICAgIE5Qcm9ncmVzcy5kb25lKCk7CgogICAgICAgICAgY2FzZSAzNDoKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM3OwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICBjYXNlIDM2OgogICAgICAgICAgICAvKiBoYXMgbm8gdG9rZW4qLwogICAgICAgICAgICBpZiAod2hpdGVMaXN0LmluZGV4T2YodG8ucGF0aCkgIT09IC0xKSB7CiAgICAgICAgICAgICAgLy8gaW4gdGhlIGZyZWUgbG9naW4gd2hpdGVsaXN0LCBnbyBkaXJlY3RseQogICAgICAgICAgICAgIG5leHQoKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAvLyBvdGhlciBwYWdlcyB0aGF0IGRvIG5vdCBoYXZlIHBlcm1pc3Npb24gdG8gYWNjZXNzIGFyZSByZWRpcmVjdGVkIHRvIHRoZSBsb2dpbiBwYWdlLgogICAgICAgICAgICAgIG5leHQoIi9sb2dpbj9yZWRpcmVjdD0iLmNvbmNhdCh0by5wYXRoKSk7CiAgICAgICAgICAgICAgTlByb2dyZXNzLmRvbmUoKTsKICAgICAgICAgICAgfQoKICAgICAgICAgIGNhc2UgMzc6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZSwgbnVsbCwgW1sxNCwgMjddXSk7CiAgfSkpOwoKICByZXR1cm4gZnVuY3Rpb24gKF94LCBfeDIsIF94MykgewogICAgcmV0dXJuIF9yZWYuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCkpOwpyb3V0ZXIuYWZ0ZXJFYWNoKGZ1bmN0aW9uICgpIHsKICAvLyBmaW5pc2ggcHJvZ3Jlc3MgYmFyCiAgTlByb2dyZXNzLmRvbmUoKTsKfSk7"},{"version":3,"sources":["D:/UserData/Z0047YMR/Documents/GitHub/Admin-master/src/permission.js"],"names":["router","store","Message","NProgress","getToken","getPageTitle","configure","showSpinner","whiteList","beforeEach","to","from","next","start","document","title","meta","hasToken","path","done","hasRoles","getters","roles","length","dispatch","console","log","accessRoutes","addRoutes","replace","error","indexOf","afterEach"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAOC,SAAP,MAAsB,WAAtB,C,CAAkC;;AAClC,OAAO,yBAAP,C,CAAiC;;AACjC,SAASC,QAAT,QAAyB,cAAzB,C,CAAwC;;AACxC,OAAOC,YAAP,MAAyB,wBAAzB;AAEAF,SAAS,CAACG,SAAV,CAAoB;AAAEC,EAAAA,WAAW,EAAE;AAAf,CAApB,E,CAA4C;;AAE5C,IAAMC,SAAS,GAAG,CAAC,QAAD,CAAlB,C,CAA6B;;AAE7BR,MAAM,CAACS,UAAP;AAAA,qEAAkB,iBAAOC,EAAP,EAAWC,IAAX,EAAiBC,IAAjB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAChB;AACAT,YAAAA,SAAS,CAACU,KAAV,GAFgB,CAIhB;;AACAC,YAAAA,QAAQ,CAACC,KAAT,GAAiBV,YAAY,CAACK,EAAE,CAACM,IAAH,CAAQD,KAAT,CAA7B,CALgB,CAOhB;;AACME,YAAAA,QARU,GAQCb,QAAQ,EART;;AAAA,iBAUZa,QAVY;AAAA;AAAA;AAAA;;AAAA,kBAWVP,EAAE,CAACQ,IAAH,KAAY,QAXF;AAAA;AAAA;AAAA;;AAYZ;AACAN,YAAAA,IAAI,CAAC;AAAEM,cAAAA,IAAI,EAAE;AAAR,aAAD,CAAJ;AACAf,YAAAA,SAAS,CAACgB,IAAV;AAdY;AAAA;;AAAA;AAgBZ;AACMC,YAAAA,QAjBM,GAiBKnB,KAAK,CAACoB,OAAN,CAAcC,KAAd,IAAuBrB,KAAK,CAACoB,OAAN,CAAcC,KAAd,CAAoBC,MAApB,GAA6B,CAjBzD;;AAAA,iBAkBRH,QAlBQ;AAAA;AAAA;AAAA;;AAmBVR,YAAAA,IAAI;AAnBM;AAAA;;AAAA;AAAA;AAAA;AAAA,mBAwBgBX,KAAK,CAACuB,QAAN,CAAe,cAAf,CAxBhB;;AAAA;AAAA;AAwBAF,YAAAA,KAxBA,yBAwBAA,KAxBA;AAyBRG,YAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ,EAzBQ,CA0BR;;AA1BQ;AAAA,mBA2BmBrB,KAAK,CAACuB,QAAN,CAAe,2BAAf,EAA4CF,KAA5C,CA3BnB;;AAAA;AA2BFK,YAAAA,YA3BE;AA6BR;AACA3B,YAAAA,MAAM,CAAC4B,SAAP,CAAiBD,YAAjB,EA9BQ,CAgCR;AACA;;AACAf,YAAAA,IAAI,iCAAMF,EAAN;AAAUmB,cAAAA,OAAO,EAAE;AAAnB,eAAJ;AAlCQ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,mBAqCF5B,KAAK,CAACuB,QAAN,CAAe,iBAAf,CArCE;;AAAA;AAsCRtB,YAAAA,OAAO,CAAC4B,KAAR,CAAc,eAAS,WAAvB;AACAlB,YAAAA,IAAI,2BAAoBF,EAAE,CAACQ,IAAvB,EAAJ;AACAf,YAAAA,SAAS,CAACgB,IAAV;;AAxCQ;AAAA;AAAA;;AAAA;AA6Cd;AAEA,gBAAIX,SAAS,CAACuB,OAAV,CAAkBrB,EAAE,CAACQ,IAArB,MAA+B,CAAC,CAApC,EAAuC;AACrC;AACAN,cAAAA,IAAI;AACL,aAHD,MAGO;AACL;AACAA,cAAAA,IAAI,2BAAoBF,EAAE,CAACQ,IAAvB,EAAJ;AACAf,cAAAA,SAAS,CAACgB,IAAV;AACD;;AAtDa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAAA;AAAA;AAAA;AAAA;AA0DAnB,MAAM,CAACgC,SAAP,CAAiB,YAAM;AACrB;AACA7B,EAAAA,SAAS,CAACgB,IAAV;AACD,CAHD","sourcesContent":["import router from './router'\nimport store from './store'\nimport { Message } from 'element-ui'\nimport NProgress from 'nprogress' // progress bar\nimport 'nprogress/nprogress.css' // progress bar style\nimport { getToken } from '@/utils/auth' // get token from cookie\nimport getPageTitle from '@/utils/get-page-title'\n\nNProgress.configure({ showSpinner: false }) // NProgress Configuration\n\nconst whiteList = ['/login'] // no redirect whitelist\n\nrouter.beforeEach(async (to, from, next) => {\n  // start progress bar\n  NProgress.start()\n\n  // set page title\n  document.title = getPageTitle(to.meta.title)\n\n  // determine whether the user has logged in\n  const hasToken = getToken()\n\n  if (hasToken) {\n    if (to.path === '/login') {\n      // if is logged in, redirect to the home page\n      next({ path: '/' })\n      NProgress.done() \n    } else {\n      // determine whether the user has obtained his permission roles through getInfo\n      const hasRoles = store.getters.roles && store.getters.roles.length > 0\n      if (hasRoles) {\n        next()\n      } else {\n        try {\n          // get user info\n          // note: roles must be a object array! such as: ['admin'] or ,['developer','editor']\n          const { roles } = await store.dispatch('user/getInfo')\n          console.log(roles);\n          // generate accessible routes map based on roles\n          const accessRoutes = await store.dispatch('permission/generateRoutes', roles)\n\n          // dynamically add accessible routes\n          router.addRoutes(accessRoutes)\n\n          // hack method to ensure that addRoutes is complete\n          // set the replace: true, so the navigation will not leave a history record\n          next({ ...to, replace: true })\n        } catch (error) {\n          // remove token and go to login page to re-login\n          await store.dispatch('user/resetToken')\n          Message.error(error || 'Has Error')\n          next(`/login?redirect=${to.path}`)\n          NProgress.done()\n        }\n      }\n    }\n  } else {\n    /* has no token*/\n\n    if (whiteList.indexOf(to.path) !== -1) {\n      // in the free login whitelist, go directly\n      next()\n    } else {\n      // other pages that do not have permission to access are redirected to the login page.\n      next(`/login?redirect=${to.path}`)\n      NProgress.done()\n    }\n  }\n})\n\nrouter.afterEach(() => {\n  // finish progress bar\n  NProgress.done()\n})\n"]}]}